name: CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

env:
  GO_VERSION: '1.23'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8.0.0
      with:
        version: v2.1.6
        args: --config .golangci.yml

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Get dependencies
      run: |
        go mod download
        go mod verify

    - name: Build
      run: go build -v ./...

    - name: Test with coverage
      run: |
        go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        go tool cover -func=coverage.txt | tail -1

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.txt

  allocation-check:
    name: Allocation Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Check zero allocations
      run: |
        # Run allocation tests
        go test -run=TestZeroAlloc -v ./...

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
    - uses: actions/checkout@v4

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: '-no-fail -fmt sarif -out results.sarif ./...'

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: results.sarif

  license:
    name: License Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Check License Headers
      run: |
        # Check that all .go files have proper copyright
        missing_copyright=""
        for file in $(find . -name "*.go" -not -path "./vendor/*" -not -path "./.git/*"); do
          if ! head -n 10 "$file" | grep -q "Copyright.*Semih Alev\|MIT License"; then
            missing_copyright="$missing_copyright\n$file"
          fi
        done
        if [ ! -z "$missing_copyright" ]; then
          echo "Files missing copyright notice:$missing_copyright"
          echo "Note: Add copyright headers if needed"
        fi

  compatibility:
    name: Compatibility Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.23']
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Test compatibility
      run: |
        go test -v ./...